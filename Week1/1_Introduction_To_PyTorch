{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1_Introduction_To_PyTorch","provenance":[{"file_id":"https://github.com/GokuMohandas/madewithml/blob/main/notebooks/05_PyTorch.ipynb","timestamp":1610644289391},{"file_id":"https://github.com/GokuMohandas/madewithml/blob/main/notebooks/05_PyTorch.ipynb","timestamp":1607980263943}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"ICGQy3wfzynE"},"source":["<div align=\"center\">\n","<h1><img width=\"30\" src=\"https://imgur.com/ashokuF.png\">&nbsp;<a href=\"http://vietai.org/\">VietAI</a> ÔΩú <img width=\"25\" src=\"https://imgur.com/kiwYmP9.png\">&nbsp;<a href=\"https://protonx.ai/\">ProtonX</a></h1>\n","üî• BUILDING A COMMUNITY OF WORLD-CLASS AI TALENT IN VIETNAM\n","<br>\n","</div>\n","<hr>"]},{"cell_type":"markdown","metadata":{"id":"RvwFrkzSPbw7"},"source":["# PyTorch\n","\n","Trong Notebook n√†y, ch√∫ng ta s·∫Ω c√πng t√¨m hi·ªÉu nh·ªØng ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ [PyTorch](https://pytorch.org). Pytorch l√† m·ªôt th∆∞ vi·ªán h·ªçc m√°y ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ x√¢y d·ª±ng `dynamic neural networks`. Ch√∫ng ta s·∫Ω t√¨m hi·ªÉu nh·ªØng ki·∫øn th·ª©c c∆° b·∫£n nh∆∞ t·∫°o v√† s·ª≠ d·ª•ng Tensors."]},{"cell_type":"markdown","metadata":{"id":"SFa_PSr2tvaC"},"source":["# Set up"]},{"cell_type":"code","metadata":{"id":"eLAkqoRKtyFD"},"source":["# Import th∆∞ vi·ªán \n","import numpy as np\n","import torch"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"l9krh147uJOV"},"source":["SEED = 1234"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1uLEnBgft22Y","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542254,"user_tz":-420,"elapsed":4351,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"5e8ce663-1c45-405d-8efe-53bc98a03ad6"},"source":["# C√†i ƒë·∫∑t seed ƒë·ªÉ gi·ªØ m·ªói l·∫ßn random k·∫øt qu·∫£ kh√¥ng thay ƒë·ªïi\n","np.random.seed(seed=SEED)\n","torch.manual_seed(SEED)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<torch._C.Generator at 0x7f0e33c09b58>"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"08AUKP9xu8YQ"},"source":["# Basics"]},{"cell_type":"code","metadata":{"id":"o3jBRfYZuNqF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542255,"user_tz":-420,"elapsed":4343,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"452cd00d-2118-48a5-b86c-7d1a4f19c83e"},"source":["# T·∫°o 1 Random Tensor \n","x = torch.randn(2, 3) # normal distribution (rand(2,3) -> uniform distribution)\n","print(f\"Type: {x.type()}\")\n","print(f\"Size: {x.shape}\")\n","print(f\"Values: \\n{x}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Type: torch.FloatTensor\n","Size: torch.Size([2, 3])\n","Values: \n","tensor([[ 0.0461,  0.4024, -1.0115],\n","        [ 0.2167, -0.6123,  0.5036]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Pho5A7JluNvj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542256,"user_tz":-420,"elapsed":4333,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"a9fbad06-1b3b-4dc2-e35a-9882d0de7b0a"},"source":["# Zero and Ones tensor\n","x = torch.zeros(2, 3)\n","print (x)\n","x = torch.ones(2, 3)\n","print (x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tensor([[0., 0., 0.],\n","        [0., 0., 0.]])\n","tensor([[1., 1., 1.],\n","        [1., 1., 1.]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UTecl1RduNtL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542256,"user_tz":-420,"elapsed":4323,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"296d25a3-b5de-4a73-edf8-08cc6981988e"},"source":["# List ‚Üí Tensor\n","x = torch.Tensor([[1, 2, 3],[4, 5, 6]])\n","print(f\"Size: {x.shape}\")\n","print(f\"Values: \\n{x}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 3])\n","Values: \n","tensor([[1., 2., 3.],\n","        [4., 5., 6.]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2OQTnxWOuNnY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542257,"user_tz":-420,"elapsed":4314,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"76ffd1cc-d495-41fa-a2ce-c80aa79d4c85"},"source":["# NumPy array ‚Üí Tensor\n","x = torch.Tensor(np.random.rand(2, 3))\n","print(f\"Size: {x.shape}\")\n","print(f\"Values: \\n{x}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 3])\n","Values: \n","tensor([[0.1915, 0.6221, 0.4377],\n","        [0.7854, 0.7800, 0.2726]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8K2kWrkZuilf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542259,"user_tz":-420,"elapsed":4307,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"1c11ed91-37ad-4418-8170-ba9e5193b5c0"},"source":["# Changing tensor type\n","x = torch.Tensor(3, 4)\n","print(f\"Type: {x.type()}\")\n","x = x.long()\n","print(f\"Type: {x.type()}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Type: torch.FloatTensor\n","Type: torch.LongTensor\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"6LxCmxqFu6sq"},"source":["# Operations"]},{"cell_type":"code","metadata":{"id":"yfYLm_1Buixy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542259,"user_tz":-420,"elapsed":4298,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"60116ce2-5851-46cf-cd6d-48cf18e503d6"},"source":["# Addition\n","x = torch.randn(2, 3)\n","y = torch.randn(2, 3)\n","z = x + y\n","print(f\"Size: {z.shape}\")\n","print(f\"Values: \\n{z}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 3])\n","Values: \n","tensor([[ 0.0761, -0.6775, -0.3988],\n","        [ 3.0633, -0.1589,  0.3514]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"22abfI18uiuw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542260,"user_tz":-420,"elapsed":4290,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"16c5e040-240a-4f47-8dc4-804ede75cbb6"},"source":["# Dot product\n","x = torch.randn(2, 3)\n","y = torch.randn(3, 2)\n","z = torch.mm(x, y)\n","print(f\"Size: {z.shape}\")\n","print(f\"Values: \\n{z}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 2])\n","Values: \n","tensor([[ 1.0796, -0.0759],\n","        [ 1.2746, -0.5134]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p1ztJNrruiqv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542260,"user_tz":-420,"elapsed":4281,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"80e66fb6-f7cd-4434-aef0-545df3b15700"},"source":["# Transpose\n","x = torch.randn(2, 3)\n","print(f\"Size: {x.shape}\")\n","print(f\"Values: \\n{x}\")\n","y = torch.t(x)\n","print(f\"Size: {y.shape}\")\n","print(f\"Values: \\n{y}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 3])\n","Values: \n","tensor([[ 0.8042, -0.1383,  0.3196],\n","        [-1.0187, -1.3147,  2.5228]])\n","Size: torch.Size([3, 2])\n","Values: \n","tensor([[ 0.8042, -1.0187],\n","        [-0.1383, -1.3147],\n","        [ 0.3196,  2.5228]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zoLDryFYuioF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542261,"user_tz":-420,"elapsed":4273,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"ee81d9c2-1035-480c-8b60-e7d5269de1bb"},"source":["# Reshape\n","x = torch.randn(2, 3)\n","z = x.view(3, 2)\n","print(f\"Size: {z.shape}\")\n","print(f\"Values: \\n{z}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([3, 2])\n","Values: \n","tensor([[ 0.4501,  0.2709],\n","        [-0.8087, -0.0217],\n","        [-1.0413,  0.0702]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2fdNmFu3vlE7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542785,"user_tz":-420,"elapsed":4788,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"4aa9bfa0-ad1b-4987-89d7-01e980ab088c"},"source":["# Dangers of reshaping (unintended consequences)\n","x = torch.tensor([\n","    [[1,1,1,1], [2,2,2,2], [3,3,3,3]],\n","    [[10,10,10,10], [20,20,20,20], [30,30,30,30]]\n","])\n","print(f\"Size: {x.shape}\")\n","print(f\"x: \\n{x}\\n\")\n","\n","a = x.view(x.size(1), -1)\n","print(f\"\\nSize: {a.shape}\")\n","print(f\"a: \\n{a}\\n\")\n","\n","b = x.transpose(0,1).contiguous()\n","print(f\"\\nSize: {b.shape}\")\n","print(f\"b: \\n{b}\\n\")\n","\n","c = b.view(b.size(0), -1)\n","print(f\"\\nSize: {c.shape}\")\n","print(f\"c: \\n{c}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Size: torch.Size([2, 3, 4])\n","x: \n","tensor([[[ 1,  1,  1,  1],\n","         [ 2,  2,  2,  2],\n","         [ 3,  3,  3,  3]],\n","\n","        [[10, 10, 10, 10],\n","         [20, 20, 20, 20],\n","         [30, 30, 30, 30]]])\n","\n","\n","Size: torch.Size([3, 8])\n","a: \n","tensor([[ 1,  1,  1,  1,  2,  2,  2,  2],\n","        [ 3,  3,  3,  3, 10, 10, 10, 10],\n","        [20, 20, 20, 20, 30, 30, 30, 30]])\n","\n","\n","Size: torch.Size([3, 2, 4])\n","b: \n","tensor([[[ 1,  1,  1,  1],\n","         [10, 10, 10, 10]],\n","\n","        [[ 2,  2,  2,  2],\n","         [20, 20, 20, 20]],\n","\n","        [[ 3,  3,  3,  3],\n","         [30, 30, 30, 30]]])\n","\n","\n","Size: torch.Size([3, 8])\n","c: \n","tensor([[ 1,  1,  1,  1, 10, 10, 10, 10],\n","        [ 2,  2,  2,  2, 20, 20, 20, 20],\n","        [ 3,  3,  3,  3, 30, 30, 30, 30]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"HcW6i9xJwU2Q","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542795,"user_tz":-420,"elapsed":4787,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"01393d64-0bee-4f8f-f0bf-e6fd13a0773e"},"source":["# Dimensional operations\n","x = torch.randn(2, 3)\n","print(f\"Values: \\n{x}\")\n","y = torch.sum(x, dim=0) # add each row's value for every column\n","print(f\"Values: \\n{y}\")\n","z = torch.sum(x, dim=1) # add each columns's value for every row\n","print(f\"Values: \\n{z}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Values: \n","tensor([[ 0.5797, -0.0599,  0.1816],\n","        [-0.6797, -0.2567, -1.8189]])\n","Values: \n","tensor([-0.1000, -0.3166, -1.6373])\n","Values: \n","tensor([ 0.7013, -2.7553])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kqxljkudzH0M"},"source":["# Indexing, Splicing and Joining"]},{"cell_type":"code","metadata":{"id":"Q8-w1Cb3wsj0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542797,"user_tz":-420,"elapsed":4780,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"020c5d64-be40-4579-af8b-36523130d19d"},"source":["x = torch.randn(3, 4)\n","print (f\"x: \\n{x}\")\n","print (f\"x[:1]: \\n{x[:1]}\")\n","print (f\"x[:1, 1:3]: \\n{x[:1, 1:3]}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["x: \n","tensor([[ 0.2111,  0.3372,  0.6638,  1.0397],\n","        [ 1.8434,  0.6588, -0.2349, -0.0306],\n","        [ 1.7462, -0.0722, -1.6794, -1.7010]])\n","x[:1]: \n","tensor([[0.2111, 0.3372, 0.6638, 1.0397]])\n","x[:1, 1:3]: \n","tensor([[0.3372, 0.6638]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jBGk_740wsm3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542800,"user_tz":-420,"elapsed":4772,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"9d605bf0-75c8-47ff-e4f6-8d9727eadbd9"},"source":["# Select with dimensional indicies\n","x = torch.randn(2, 3)\n","print(f\"Values: \\n{x}\")\n","\n","col_indices = torch.LongTensor([0, 2])\n","chosen = torch.index_select(x, dim=1, index=col_indices) # values from column 0 & 2\n","print(f\"Values: \\n{chosen}\") \n","\n","row_indices = torch.LongTensor([0, 1])\n","col_indices = torch.LongTensor([0, 2])\n","chosen = x[row_indices, col_indices] # values from (0, 0) & (2, 1)\n","print(f\"Values: \\n{chosen}\") "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Values: \n","tensor([[ 0.6486,  1.7653,  1.0812],\n","        [ 1.2436,  0.8971, -0.0784]])\n","Values: \n","tensor([[ 0.6486,  1.0812],\n","        [ 1.2436, -0.0784]])\n","Values: \n","tensor([ 0.6486, -0.0784])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UI_hboLNwsqQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542801,"user_tz":-420,"elapsed":4763,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"2b2dbb0b-2690-4a44-e42f-5c31dea38df3"},"source":["# Concatenation\n","x = torch.randn(2, 3)\n","print(f\"Values: \\n{x}\")\n","y = torch.cat([x, x], dim=0) # stack by rows (dim=1 to stack by columns)\n","print(f\"Values: \\n{y}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Values: \n","tensor([[ 0.5548, -0.0845,  0.5903],\n","        [-1.0032, -1.7873,  0.0538]])\n","Values: \n","tensor([[ 0.5548, -0.0845,  0.5903],\n","        [-1.0032, -1.7873,  0.0538],\n","        [ 0.5548, -0.0845,  0.5903],\n","        [-1.0032, -1.7873,  0.0538]])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lK1OQUYL1bE3"},"source":["# Gradients"]},{"cell_type":"markdown","metadata":{"id":"VF5Q5kfs1rXZ"},"source":["* $ y = 3x + 2 $\n","* $ z = \\sum{y}/N $\n","* $ \\frac{\\partial(z)}{\\partial(x)} = \\frac{\\partial(z)}{\\partial(y)} \\frac{\\partial(y)}{\\partial(x)} = \\frac{1}{N} * 3 = \\frac{1}{12} * 3 = 0.25 $"]},{"cell_type":"code","metadata":{"id":"9Ft6PAeW0WCe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542802,"user_tz":-420,"elapsed":4754,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"d08e3e28-dec6-42f3-f52d-51319c4793ac"},"source":["# Tensors with gradient bookkeeping\n","x = torch.rand(3, 4, requires_grad=True)\n","y = 3*x + 2\n","z = y.mean()\n","z.backward() # z has to be scalar\n","print(f\"x: \\n{x}\")\n","print(f\"x.grad: \\n{x.grad}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["x: \n","tensor([[0.7379, 0.0846, 0.4245, 0.9778],\n","        [0.6800, 0.3151, 0.3911, 0.8943],\n","        [0.6889, 0.8389, 0.1780, 0.6442]], requires_grad=True)\n","x.grad: \n","tensor([[0.2500, 0.2500, 0.2500, 0.2500],\n","        [0.2500, 0.2500, 0.2500, 0.2500],\n","        [0.2500, 0.2500, 0.2500, 0.2500]])\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kseQSKj72H8S"},"source":["\n","\n","# CUDA tensors\n","\n","T√≠nh to√°n tr√™n GPU nhanh g·∫•p nhi·ªÅu l·∫ßn tr√™n CPU. Tensor h·ªó tr·ª£ vi·ªác t√≠nh to√°n tr√™n GPU, m·∫∑c ƒë·ªãnh Tensor t·∫°o theo c√°ch th√¥ng th∆∞·ªùng s·∫Ω n·∫±m tr√™n CPU. ƒê·ªÉ ƒëem Tensor l√™n GPU t√≠nh to√°n, ta d√πng ph∆∞∆°ng th·ª©c `.cuda()`."]},{"cell_type":"code","metadata":{"id":"ZE-ZyECv0WOX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542803,"user_tz":-420,"elapsed":4744,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"a0df876e-5ebe-4a59-bcdb-4e42559ca686"},"source":["# Is CUDA available?\n","print (torch.cuda.is_available())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PWvknlav7hmZ"},"source":["N·∫øu k·∫øt qu·∫£ c·ªßa Cell tr√™n l√† False (t·ª©c l√† CUDA kh√¥ng kh·∫£ d·ª•ng). B·∫°n h√£y th·ª±c hi·ªán theo c√°c b∆∞·ªõc sau: Ch·ªçn *Runtime* > *Change runtime type* > Chuy·ªÉn t·ª´ *Hardware accelertor* sang *GPU* > ·∫§n *Save* ƒë·ªÉ l∆∞u l·∫°i."]},{"cell_type":"code","metadata":{"id":"ewamITzX2W-B"},"source":["import torch"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IwsrvGad2NDO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542805,"user_tz":-420,"elapsed":4729,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"8a28e584-825e-4e1d-a90c-e19e1ed2ccbd"},"source":["# Is CUDA available now?\n","print (torch.cuda.is_available())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"50ewrqUVCRHg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645542807,"user_tz":-420,"elapsed":4722,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"10822cf0-d6b3-450a-aa93-218b2502298a"},"source":["# Set device\n","device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n","print (device)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["cuda\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"s12ivWJZCLq7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1610645553237,"user_tz":-420,"elapsed":15138,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"20925fa6-d267-4c17-a038-2f070d7d8fc0"},"source":["x = torch.rand(2,3)\n","print (x.is_cuda)\n","x = torch.rand(2,3).to(device) # sTensor is stored on the GPU\n","print (x.is_cuda)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["False\n","True\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bwXTwpmm89b2"},"source":["Minh h·ªça vi·ªác t√≠nh to√°n tr√™n GPU nhanh h∆°n CPU b·∫±ng v√≠ d·ª• sau:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zGtHlIPn86_S","executionInfo":{"status":"ok","timestamp":1610645555061,"user_tz":-420,"elapsed":16949,"user":{"displayName":"ProtonX","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi1YmbIjCdSgKJ--JlP3VlS_pKg6mc3qow-DyLQjQ=s64","userId":"13107789996564121407"}},"outputId":"f837affa-b948-4caa-97e2-dc9430b32164"},"source":["import torch\n","import time\n","\n","x = torch.rand(10000,10000)\n","y = torch.rand(10000,10000)\n","tic = time.time()\n","x + y\n","toc = time.time()\n","print('Elapsed time on CPU: %fs' % (toc-tic))\n","\n","x = x.cuda()\n","y =  y.cuda()\n","tic = time.time()\n","x + y\n","toc = time.time()\n","print('Elapsed time on GPU: %fs' % (toc-tic))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Elapsed time on CPU: 0.232154s\n","Elapsed time on GPU: 0.006581s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"dm_illlo8AJU"},"source":["# References \n","- T√†i li·ªáu ƒë∆∞·ª£c tham kh·∫£o t·ª´: MadewithML.\n","\n","---\n","\n"]}]}